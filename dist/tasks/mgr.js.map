{"version":3,"sources":["../../src/tasks/mgr.js"],"names":["cache","debug","watchlog","log","plugins","pluginConfig","isUndefined","value","undefined","Hopp","constructor","src","Array","pluginCtx","d","stack","dest","out","watch","name","directory","recache","watchers","forEach","newpath","sub","split","indexOf","sep","resolve","substr","push","recursive","start","Promise","process","on","watcher","close","startBundling","modified","useDoubleCache","sourcemap","files","freshBuild","unmodified","file","originalFd","tmpBundle","tmpBundlePath","bundle","Date","now","stream","createReadStream","fd","autoClose","replace","end","basename","concat","buildStack","add","dirname","reject","pipe","createWriteStream","map","error","that","mode","plugin","pluginStream","data","handler","then","newData","emit","catch","err","retval","next","done","Error","loadPlugin","taskName","args","mod","require","join","config","__esModule","default","logger","pluginCache","needsBundling","needsRecaching","readonly","length","loadedPlugins","hasOwnProperty","body","output","tmp","tmppath","promise","newStream","all","val","toJSON","fromJSON","json"],"mappings":"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","file":"mgr.js","sourcesContent":["/**\n * @file src/tasks/mgr.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\nimport fs from 'fs'\nimport path from 'path'\nimport pump from 'pump'\nimport glob from '../fs/glob'\nimport through from 'through'\nimport * as cache from '../cache'\nimport mapStream from 'map-stream'\nimport getPath from '../fs/get-path'\nimport { _, createLogger } from '../utils'\nimport { disableFSCache, mkdirp, openFile, tmpFile, tmpFileSync } from '../fs'\nimport { buffer, Bundle, createReadStream } from '../streams'\n\nconst { debug } = createLogger('hopp')\nconst watchlog = createLogger('hopp:watch').log\n\n/**\n * Plugins storage.\n */\nconst plugins = {}\nconst pluginConfig = {}\n\n/**\n * Test for undefined or null.\n */\nfunction isUndefined (value) {\n  return value === undefined || value === null\n}\n\n/**\n * Hopp class to manage tasks.\n */\nexport default class Hopp {\n  /**\n   * Creates a new task with the glob.\n   * DOES NOT START THE TASK.\n   *\n   * @param {Glob} src\n   * @return {Hopp} new hopp object\n   */\n  constructor (src) {\n    if (!(src instanceof Array)) {\n      src = [src]\n    }\n\n    // store context local to each task\n    this.pluginCtx = {}\n\n    // persistent info\n    this.d = {\n      src,\n      stack: []\n    }\n  }\n\n  /**\n   * Sets the destination of this pipeline.\n   * @param {String} out\n   * @return {Hopp} task manager\n   */\n  dest (out) {\n    this.d.dest = out\n    return this\n  }\n\n  /**\n   * Run task in continuous mode.\n   */\n  watch (name, directory, recache = false) {\n    name = `watch:${name}`\n\n    const watchers = []\n\n    this.d.src.forEach(src => {\n      // get most definitive path possible\n      let newpath = ''\n      for (let sub of src.split('/')) {\n        if (sub) {\n          if (sub.indexOf('*') !== -1) {\n            break\n          }\n\n          newpath += path.sep + sub\n        }\n      }\n      newpath = path.resolve(directory, newpath.substr(1))\n\n      // disable fs caching for watch\n      disableFSCache()\n\n      // start watch\n      watchlog('Watching for %s ...', name)\n      watchers.push(fs.watch(newpath, {\n        recursive: src.indexOf('/**/') !== -1\n      }, () => this.start(name, directory, recache, false)))\n    })\n\n    return new Promise(resolve => {\n      process.on('SIGINT', () => {\n        watchers.forEach(watcher => watcher.close())\n        resolve()\n      })\n    })\n  }\n\n  /**\n   * Handles bundling.\n   */\n  async startBundling (name, directory, modified, dest, useDoubleCache = true) {\n    const { log, debug } = createLogger(`hopp:${name}`)\n    debug('Switched to bundling mode')\n\n    /**\n     * Fetch sourcemap from cache.\n     */\n    const sourcemap = cache.sourcemap(name)\n\n    /**\n     * Get full list of current files.\n     */\n    const files = await glob(this.d.src, directory, useDoubleCache, true)\n\n    /**\n     * Create list of unmodified.\n     */\n    let freshBuild = true\n    const unmodified = {}\n\n    for (let file of files) {\n      if (modified.indexOf(file) === -1) {\n        unmodified[file] = true\n        freshBuild = false\n      }\n    }\n\n    /**\n     * Get old bundle & create new one.\n     */\n    const originalFd = freshBuild ? null : await openFile(dest, 'r')\n    const [tmpBundle, tmpBundlePath] = await tmpFile()\n\n    /**\n     * Create new bundle to forward to.\n     */\n    const bundle = new Bundle(directory, tmpBundle)\n\n    /**\n     * Since bundling starts streaming right away, we can count this\n     * as the start of the build.\n     */\n    const start = Date.now()\n    log('Starting task')\n\n    /**\n     * Add all files.\n     */\n    for (let file of files) {\n      let stream\n\n      if (unmodified[file]) {\n        debug('forward: %s', file)\n        stream = fs.createReadStream(null, {\n          fd: originalFd,\n          autoClose: false,\n          start: sourcemap[file.replace(directory, '.')].start,\n          end: sourcemap[file.replace(directory, '.')].end\n        })\n      } else {\n        debug('transform: %s', file)\n        stream = pump([\n          createReadStream(file, dest + '/' + path.basename(file))\n        ].concat(this.buildStack(name)))\n      }\n\n      bundle.add(file, stream)\n    }\n\n    /**\n     * Wait for bundling to end.\n     */\n    await bundle.end(tmpBundlePath)\n\n    /**\n     * Move the bundle to the new location.\n     */\n    if (originalFd) originalFd.close()\n    await mkdirp(path.dirname(dest).replace(directory, ''), directory)\n    await new Promise((resolve, reject) => {\n      const stream = fs.createReadStream(tmpBundlePath).pipe(fs.createWriteStream(dest))\n\n      stream.on('close', resolve)\n      stream.on('error', reject)\n    })\n\n    /**\n     * Update sourcemap.\n     */\n    cache.sourcemap(name, bundle.map)\n\n    log('Task ended (took %s ms)', Date.now() - start)\n  }\n\n  /**\n   * Converts all plugins in the stack into streams.\n   */\n  buildStack (name) {\n    const { error } = createLogger(`hopp:${name}`)\n    const that = this\n\n    let mode = 'stream'\n\n    return this.d.stack.map(([plugin]) => {\n      const pluginStream = through(async function (data) {\n        try {\n          const handler = plugins[plugin](\n            that.pluginCtx[plugin],\n            data\n          )\n\n          // for async functions/promises\n          if (handler instanceof Promise) {\n            handler\n              .then(newData => this.emit('data', newData))\n              .catch(err => this.emit('error', err))\n          } else if ('next' in handler) {\n            let retval\n\n            // for async generators\n            do {\n              retval = await handler.next()\n              this.emit('data', retval.value)\n            } while (!retval.done)\n          } else {\n            // otherwise, fail\n            this.emit('error', new Error('Unknown return value received from ' + plugin))\n          }\n        } catch (err) {\n          this.emit('error', err)\n        }\n      })\n\n      /**\n       * Enable buffer mode if required.\n       */\n      if (mode === 'stream' && pluginConfig[plugin].mode === 'buffer') {\n        mode = 'buffer'\n        return pump(buffer(), pluginStream, err => {\n          if (err) error(err && err.stack ? err.stack : err)\n        })\n      }\n\n      /**\n       * Otherwise keep pumping.\n       */\n      return pluginStream\n    })\n  }\n\n  /**\n   * Loads a plugin, manages its env.\n   */\n  loadPlugin (taskName, plugin, args, directory) {\n    let mod = plugins[plugin]\n\n    if (!mod) {\n      // convert plugin path from relative back to absolute\n      try {\n        mod = require(path.join(directory, 'node_modules', plugin))\n      } catch (err) {\n        debug('failed to load plugin: %s', err && err.stack ? err.stack : err)\n        throw new Error('Failed to load plugin: ' + plugin)\n      }\n\n      // expose module config\n      pluginConfig[plugin] = mod.config || {}\n\n      // if defined as an ES2015 module, assume that the\n      // export is at 'default'\n      if (mod.__esModule === true) {\n        mod = mod.default\n      }\n\n      // add plugins to loaded plugins\n      plugins[plugin] = mod\n    }\n\n    // create plugin logger\n    const logger = createLogger(`hopp:${taskName}:${path.basename(plugin).substr(5)}`)\n\n    // load/create cache for plugin\n    const pluginCache = cache.plugin(plugin)\n\n    // create a new context for this plugin\n    this.pluginCtx[plugin] = {\n      args,\n      cache: pluginCache,\n      log: logger.log,\n      debug: logger.debug,\n      error: logger.error\n    }\n  }\n\n  /**\n   * Starts the pipeline.\n   * @return {Promise} resolves when task is complete\n   */\n  async start (name, directory, recache = false, useDoubleCache = true) {\n    const { log, debug } = createLogger(`hopp:${name}`)\n\n    /**\n     * Figure out if bundling is needed & load plugins.\n     */\n    if (isUndefined(this.needsBundling) || isUndefined(this.needsRecaching) || isUndefined(this.readonly) || (this.d.stack.length > 0 && !this.loadedPlugins)) {\n      this.loadedPlugins = true\n\n      this.d.stack.forEach(([plugin, args]) => {\n        if (!this.pluginCtx.hasOwnProperty(plugin)) {\n          this.loadPlugin(name, plugin, args, directory)\n        }\n\n        this.needsBundling = !!(this.needsBundling || pluginConfig[plugin].bundle)\n        this.needsRecaching = !!(this.needsRecaching || pluginConfig[plugin].recache)\n        this.readonly = !!(this.readonly || pluginConfig[plugin].readonly)\n\n        if (this.needsBundling && this.readonly) {\n          throw new Error('Task chain enabled bundling and readonly mode at the same time. Not sure what to do.')\n        }\n      })\n    }\n\n    /**\n     * Override recaching.\n     */\n    if (this.needsRecaching) {\n      recache = true\n    }\n\n    /**\n     * Get the modified files.\n     */\n    debug('task recache = %s', recache)\n    let files = await glob(this.d.src, directory, useDoubleCache, recache)\n\n    if (files.length > 0) {\n      const dest = this.d.dest ? path.resolve(directory, getPath(this.d.dest)) : ''\n\n      /**\n       * Switch to bundling mode if need be.\n       */\n      if (this.needsBundling) {\n        return this.startBundling(name, directory, files, dest, useDoubleCache)\n      }\n\n      /**\n       * Ensure dist directory exists.\n       */\n      if (!this.readonly || !this.d.dest) {\n        await mkdirp(dest.replace(directory, ''), directory)\n      }\n\n      /**\n       * Create streams.\n       */\n      files = _(files).map(file => ({\n        file,\n        stream: [\n          createReadStream(file, dest + '/' + path.basename(file))\n        ]\n      }))\n\n      if (this.d.stack.length > 0) {\n        /**\n         * Create streams.\n         */\n        const stack = this.buildStack(name)\n\n        /**\n         * Connect plugin streams with pipelines.\n         */\n        files.map(file => {\n          file.stream = file.stream.concat(stack)\n          return file\n        })\n      }\n\n      /**\n       * Connect with destination.\n       */\n      files.map(file => {\n        if (!this.readonly) {\n          // strip out the actual body and write it\n          file.stream.push(mapStream((data, next) => {\n            if (typeof data !== 'object' || !data.hasOwnProperty('body')) {\n              return next(new Error('A plugin has destroyed the stream by returning a non-object.'))\n            }\n\n            next(null, data.body)\n          }))\n\n          // add the writestream at the end\n          let output\n\n          if (!this.d.dest) {\n            const { fd: tmp, name: tmppath } = tmpFileSync()\n            output = fs.createWriteStream(null, {\n              fd: tmp\n            })\n\n            file.promise = new Promise((resolve, reject) => {\n              output.on('close', () => {\n                const newStream =\n                  fs.createReadStream(tmppath)\n                    .pipe(fs.createWriteStream(file.file))\n\n                newStream.on('error', reject)\n                newStream.on('close', resolve)\n              })\n            })\n          } else {\n            output = fs.createWriteStream(dest + '/' + path.basename(file.file))\n          }\n\n          file.stream.push(output)\n        }\n\n        // promisify the current pipeline\n        return new Promise((resolve, reject) => {\n          // connect all streams together to form pipeline\n          file.stream = pump(file.stream, err => {\n            if (err) reject(err)\n          })\n\n          if (file.promise) {\n            file.promise.then(resolve, reject)\n          } else {\n            file.stream.on('close', resolve)\n          }\n        })\n      })\n\n      // start & wait for all pipelines to end\n      const start = Date.now()\n      log('Starting task')\n      await Promise.all(files.val())\n      log('Task ended (took %s ms)', Date.now() - start)\n    } else {\n      log('Skipping task')\n    }\n  }\n\n  /**\n   * Converts task manager to JSON for storage.\n   * @return {Object} proper JSON object\n   */\n  toJSON () {\n    return {\n      dest: this.d.dest,\n      src: this.d.src,\n      stack: this.d.stack,\n      needsBundling: this.needsBundling,\n      needsRecaching: this.needsRecaching,\n      readonly: this.readonly\n    }\n  }\n\n  /**\n   * Deserializes a JSON object into a manager.\n   * @param {Object} json\n   * @return {Hopp} task manager\n   */\n  fromJSON (json) {\n    this.d.dest = json.dest\n    this.d.src = json.src\n    this.d.stack = json.stack\n    this.needsBundling = json.needsBundling\n    this.needsRecaching = json.needsRecaching\n    this.readonly = json.readonly\n\n    return this\n  }\n}\n"]}