{"version":3,"sources":["../../src/tasks/loadPlugins.js"],"names":["cache","directory","pkgFile","pkg","require","pkgStat","mtime","val","savedStat","list","key","hasOwnProperty","dep","start","substr","Object","keys"],"mappings":";;;;;;;;ypBAAA;;;;;;AAMA;;AACA;;IAAYA,K;;;;AAEZ;;;;;;8DAKe,iBAAMC,SAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPC,mBADO,GACGD,YAAY,eADf;AAEPE,eAFO,GAEDC,QAAQF,OAAR,CAFC;AAAA;AAAA,0CAGW,cAAKA,OAAL,CAHX;;AAAA;AAGPG,mBAHO,kBAG0BC,KAH1B;AAAA,oBAKWN,MAAMO,GAAN,CAAU,IAAV,KAAmB,CAAC,CAAD,EAAI,EAAJ,CAL9B,oCAKRC,SALQ,aAKGC,IALH;;AAOb;;;;AAPa,kBAUTD,cAAcH,OAVL;AAAA;AAAA;AAAA;;AAAA,6CAWJI,IAXI;;AAAA;;AAcb;;;AAGAA,mBAAO,EAAP;AAjBa,mBAkBK,CAAC,cAAD,EAAiB,iBAAjB,EAAoC,kBAApC,CAlBL;AAkBb,iDAA2E;AAAhEC,iBAAgE;;AACzE,kBAAIP,IAAIQ,cAAJ,CAAmBD,GAAnB,CAAJ,EAA6B;AAC3B,qBAAWE,GAAX,IAAkBT,IAAIO,GAAJ,CAAlB,EAA4B;AAC1B,sBAAIP,IAAIO,GAAJ,EAASC,cAAT,CAAwBC,GAAxB,CAAJ,EAAkC;AAC1BC,yBAD0B,GAClBD,IAAIE,MAAJ,CAAW,CAAX,EAAc,EAAd,CADkB;;;AAGhC,wBAAID,UAAU,cAAV,IAA4BA,UAAU,cAA1C,EAA0D;AACxDJ,2BAAKG,GAAL,IAAYG,OAAOC,IAAP,CACVZ,QAAS,GAAEH,SAAU,iBAAgBW,GAAI,EAAzC,CADU,CAAZ;AAGD;AACF;AACF;AACF;AACF;;AAED;;;AAGAZ,kBAAMO,GAAN,CAAU,IAAV,EAAgB,CACdF,OADc,EAEdI,IAFc,CAAhB;;AAKA;;;AA1Ca,6CA6CNA,IA7CM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"../../src/tasks/loadPlugins.js","sourcesContent":["/**\n * @file src/plugins/load.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\nimport { stat } from '../fs'\nimport * as cache from '../cache'\n\n/**\n * Loads the list of plugins defined in the package.json.\n * @param {String} path to directory with package.json\n * @return {Promise} resolves with array of paths to plugins\n */\nexport default async directory => {\n  const pkgFile = directory + '/package.json'\n  const pkg = require(pkgFile)\n  const pkgStat = +(await stat(pkgFile)).mtime\n\n  let [savedStat, list] = cache.val('pl') || [0, {}]\n\n  /**\n   * Return cached result if unmodified.\n   */\n  if (savedStat === pkgStat) {\n    return list\n  }\n\n  /**\n   * Filter for appropriate dependencies.\n   */\n  list = {}\n  for (const key of ['dependencies', 'devDependencies', 'peerDependencies']) {\n    if (pkg.hasOwnProperty(key)) {\n      for (const dep in pkg[key]) {\n        if (pkg[key].hasOwnProperty(dep)) {\n          const start = dep.substr(0, 12)\n\n          if (start === 'hopp-plugin-' || start === 'hopp-preset-') {\n            list[dep] = Object.keys(\n              require(`${directory}/node_modules/${dep}`)\n            )\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Store in cache.\n   */\n  cache.val('pl', [\n    pkgStat,\n    list\n  ])\n\n  /**\n   * Return saved list.\n   */\n  return list\n}\n"]}