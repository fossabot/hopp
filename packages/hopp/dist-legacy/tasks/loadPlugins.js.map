{"version":3,"sources":["../../src/tasks/loadPlugins.js"],"names":["cache","directory","pkgFile","pkg","require","pkgStat","mtime","val","savedStat","list","concat","Object","keys","dependencies","devDependencies","peerDependencies","filter","start","dep","substr"],"mappings":";;;;;;;;ypBAAA;;;;;;AAMA;;AACA;;IAAYA,K;;;;AAEZ;;;;;;8DAKe,iBAAMC,SAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPC,mBADO,GACGD,YAAY,eADf;AAEPE,eAFO,GAEDC,QAAQF,OAAR,CAFC;AAAA;AAAA,0CAGW,cAAKA,OAAL,CAHX;;AAAA;AAGPG,mBAHO,kBAG0BC,KAH1B;AAAA,oBAKWN,MAAMO,GAAN,CAAU,IAAV,KAAmB,EAL9B,oCAKRC,SALQ,aAKGC,IALH;;AAOb;;;;AAPa,kBAUTD,cAAcH,OAVL;AAAA;AAAA;AAAA;;AAAA,6CAWJI,IAXI;;AAAA;;AAcb;;;AAGAA,mBAAO,GAAGC,MAAH,CACLC,OAAOC,IAAP,CAAYT,IAAIU,YAAJ,IAAoB,EAAhC,CADK,EAELF,OAAOC,IAAP,CAAYT,IAAIW,eAAJ,IAAuB,EAAnC,CAFK,EAGLH,OAAOC,IAAP,CAAYT,IAAIY,gBAAJ,IAAwB,EAApC,CAHK,EAILC,MAJK,CAIE,eAAO;AACd,kBAAMC,QAAQC,IAAIC,MAAJ,CAAW,CAAX,EAAc,EAAd,CAAd;AACA,qBAAOF,UAAU,cAAV,IAA4BA,UAAU,cAA7C;AACD,aAPM,CAAP;;AASA;;;AAGAjB,kBAAMO,GAAN,CAAU,IAAV,EAAgB,CACdF,OADc,EAEdI,IAFc,CAAhB;;AAKA;;;AAlCa,6CAqCNA,IArCM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"../../src/tasks/loadPlugins.js","sourcesContent":["/**\n * @file src/plugins/load.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\nimport { stat } from '../fs'\nimport * as cache from '../cache'\n\n/**\n * Loads the list of plugins defined in the package.json.\n * @param {String} path to directory with package.json\n * @return {Promise} resolves with array of paths to plugins\n */\nexport default async directory => {\n  const pkgFile = directory + '/package.json'\n  const pkg = require(pkgFile)\n  const pkgStat = +(await stat(pkgFile)).mtime\n\n  let [savedStat, list] = cache.val('pl') || []\n\n  /**\n   * Return cached result if unmodified.\n   */\n  if (savedStat === pkgStat) {\n    return list\n  }\n\n  /**\n   * Filter for appropriate dependencies.\n   */\n  list = [].concat(\n    Object.keys(pkg.dependencies || {}),\n    Object.keys(pkg.devDependencies || {}),\n    Object.keys(pkg.peerDependencies || {})\n  ).filter(dep => {\n    const start = dep.substr(0, 12)\n    return start === 'hopp-plugin-' || start === 'hopp-preset-'\n  })\n\n  /**\n   * Store in cache.\n   */\n  cache.val('pl', [\n    pkgStat,\n    list\n  ])\n\n  /**\n   * Return saved list.\n   */\n  return list\n}\n"]}