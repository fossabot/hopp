{"version":3,"sources":["../../src/tasks/loadPlugins.js"],"names":["directory","pkg","require","_","concat","Object","keys","dependencies","devDependencies","peerDependencies","filter","dep","startsWith"],"mappings":";;;;;;;;AAAA;;;;;;AAMA;;;;;;uDAKe,iBAAMA,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,eADO,GACA,YAAM;AACjB,kBAAI;AACF,uBAAOC,QAAQF,YAAY,eAApB,CAAP;AACD,eAFD,CAEE,OAAOG,CAAP,EAAU;AACV,uBAAO,EAAP;AACD;AACF,aANW,EADC;;AASb;;;;;AATa,6CAYN,GAAGC,MAAH,CACLC,OAAOC,IAAP,CAAYL,IAAIM,YAAJ,IAAoB,EAAhC,CADK,EAELF,OAAOC,IAAP,CAAYL,IAAIO,eAAJ,IAAuB,EAAnC,CAFK,EAGLH,OAAOC,IAAP,CAAYL,IAAIQ,gBAAJ,IAAwB,EAApC,CAHK,EAILC,MAJK,CAIE;AAAA,qBAAOC,IAAIC,UAAJ,CAAe,cAAf,CAAP;AAAA,aAJF,CAZM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"loadPlugins.js","sourcesContent":["/**\n * @file src/plugins/load.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\n/**\n * Loads the list of plugins defined in the package.json.\n * @param {String} path to directory with package.json\n * @return {Promise} resolves with array of paths to plugins\n */\nexport default async directory => {\n  const pkg = (() => {\n    try {\n      return require(directory + '/package.json')\n    } catch (_) {\n      return {}\n    }\n  })()\n\n  /**\n   * Filter for appropriate dependencies.\n   */\n  return [].concat(\n    Object.keys(pkg.dependencies || {}),\n    Object.keys(pkg.devDependencies || {}),\n    Object.keys(pkg.peerDependencies || {})\n  ).filter(dep => dep.startsWith('hopp-plugin-'))\n}\n"]}