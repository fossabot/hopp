{"version":3,"sources":["../../src/tasks/steps.js"],"names":["taskTree","bustedTasks","steps","start","name","directory","tasks","task","toJSON","defineTasks","defns","busted"],"mappings":";;;;;;;;AAAA;;;;;;AAMA,IAAIA,iBAAJ;AACA,IAAIC,oBAAJ;;AAEA;;;;AAIA,IAAMC,QAAQ,SAARA,KAAQ;AAAA,SAAU;AACtB;;;;;AAKMC,SANgB;AAAA,4EAMTC,IANS,EAMHC,SANG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAOHC,KAPG;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOXC,oBAPW;AAAA;AAAA,uBAQZP,SAASO,IAAT,EAAeJ,KAAf,CAAwBC,IAAxB,SAAgCG,IAAhC,EAAwCF,SAAxC,EAAmD,CAAC,CAACJ,YAAYM,IAAZ,CAArD,CARY;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAYtB;;;;;;;AAOAC,UAnBsB,oBAmBZ;AACR,aAAO,CAAC,OAAD,EAAUF,KAAV,CAAP;AACD;AArBqB,GAAV;AAAA,CAAd;;AAwBAJ,MAAMO,WAAN,GAAoB,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACrCX,aAAWU,KAAX;AACAT,gBAAcU,MAAd;AACD,CAHD;;kBAKeT,K","file":"steps.js","sourcesContent":["/**\n * @file src/plugins/steps.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\nlet taskTree\nlet bustedTasks\n\n/**\n * Creates a Hopp-ish object that runs\n * subtasks in steps.\n */\nconst steps = tasks => ({\n  /**\n   * Starts all tasks one by one.\n   *\n   * @return {Promise} a promise that will be resolved when all tasks are done\n   */\n  async start (name, directory) {\n    for (let task of tasks) {\n      await taskTree[task].start(`${name}:${task}`, directory, !!bustedTasks[task])\n    }\n  },\n\n  /**\n   * Converts tasks to JSON.\n   * Just converts them into an tasksay of\n   * JSON objects.\n   *\n   * @return {tasksay}\n   */\n  toJSON () {\n    return ['steps', tasks]\n  }\n})\n\nsteps.defineTasks = (defns, busted) => {\n  taskTree = defns\n  bustedTasks = busted\n}\n\nexport default steps\n"]}