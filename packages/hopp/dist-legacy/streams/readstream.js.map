{"version":3,"sources":["../../src/streams/readstream.js"],"names":["file","dest","size","emitted","createReadStream","body","next","undefined","length","Error","done"],"mappings":";;;;;;AAMA;;;;AACA;;;;AACA;;;;AACA;;;;2cATA;;;;;;kBAWe,UAACA,IAAD,EAAOC,IAAP,EAAgB;AAC7B,MAAIC,aAAJ;AACA,MAAIC,UAAU,CAAd;;AAEA,SAAO,oBACL,aAAGC,gBAAH,CAAoBJ,IAApB,CADK,EAEL;AAAA,yDAAI,iBAAOK,IAAP,EAAaC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,oBACEJ,SAASK,SADX;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEc,eAAKP,IAAL,CAFd;;AAAA;AAEAE,kBAFA,iBAE0BA,IAF1B;;AAAA;;AAKF;AACAC,yBAAWE,KAAKG,MAAhB;;AAEA;;AARE,oBASEL,UAAUD,IATZ;AAAA;AAAA;AAAA;;AAAA,+CAUOI,KAAK,IAAIG,KAAJ,CAAU,iDAAV,CAAL,CAVP;;AAAA;;AAaFH,mBAAK,IAAL,EAAW;AACT;AACAN,oBAFS;AAGTC,oBAHS;AAITC,oBAJS;AAKTQ,sBAAMP,YAAYD,IALT;;AAOT;AACAG;AARS,eAAX;;AAbE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA;AAAA;AAAA;AAAA,MAFK,CAAP;AA2BD,C","file":"../../src/streams/readstream.js","sourcesContent":["/**\n * @file src/tasks/read-stream.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\nimport fs from 'fs'\nimport pump from 'pump'\nimport map from './map'\nimport { stat } from '../fs'\n\nexport default (file, dest) => {\n  let size\n  let emitted = 0\n\n  return pump(\n    fs.createReadStream(file),\n    map(async (body, next) => {\n      if (size === undefined) {\n        size = (await stat(file)).size\n      }\n\n      // collect size\n      emitted += body.length\n\n      // check for unexpected values\n      if (emitted > size) {\n        return next(new Error('File size received exceeded expected file size.'))\n      }\n\n      next(null, {\n        // metadata\n        file,\n        dest,\n        size,\n        done: emitted === size,\n\n        // contents\n        body\n      })\n    })\n  )\n}\n"]}