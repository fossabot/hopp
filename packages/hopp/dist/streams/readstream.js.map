{"version":3,"sources":["../../src/streams/readstream.js"],"names":["file","dest","size","emitted","createReadStream","body","next","undefined","length","Error","done"],"mappings":";;;;;;AAMA;;;;AACA;;;;AACA;;;;AACA;;;;AATA;;;;;;kBAWe,CAACA,IAAD,EAAOC,IAAP,KAAgB;AAC7B,MAAIC,IAAJ;AACA,MAAIC,UAAU,CAAd;;AAEA,SAAO,oBACL,aAAGC,gBAAH,CAAoBJ,IAApB,CADK,EAEL,mBAAI,OAAOK,IAAP,EAAaC,IAAb,KAAsB;AACxB,QAAIJ,SAASK,SAAb,EAAwB;AACtBL,aAAO,CAAC,MAAM,eAAKF,IAAL,CAAP,EAAmBE,IAA1B;AACD;;AAED;AACAC,eAAWE,KAAKG,MAAhB;;AAEA;AACA,QAAIL,UAAUD,IAAd,EAAoB;AAClB,aAAOI,KAAK,IAAIG,KAAJ,CAAU,iDAAV,CAAL,CAAP;AACD;;AAEDH,SAAK,IAAL,EAAW;AACT;AACAN,UAFS;AAGTC,UAHS;AAITC,UAJS;AAKTQ,YAAMP,YAAYD,IALT;;AAOT;AACAG;AARS,KAAX;AAUD,GAvBD,CAFK,CAAP;AA2BD,C","file":"readstream.js","sourcesContent":["/**\n * @file src/tasks/read-stream.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\nimport fs from 'fs'\nimport pump from 'pump'\nimport map from './map'\nimport { stat } from '../fs'\n\nexport default (file, dest) => {\n  let size\n  let emitted = 0\n\n  return pump(\n    fs.createReadStream(file),\n    map(async (body, next) => {\n      if (size === undefined) {\n        size = (await stat(file)).size\n      }\n\n      // collect size\n      emitted += body.length\n\n      // check for unexpected values\n      if (emitted > size) {\n        return next(new Error('File size received exceeded expected file size.'))\n      }\n\n      next(null, {\n        // metadata\n        file,\n        dest,\n        size,\n        done: emitted === size,\n\n        // contents\n        body\n      })\n    })\n  )\n}\n"]}