{"version":3,"sources":["../../src/utils/fn.js"],"names":["fn","cache","args","slice","call","arguments","last","pop","val","i","a","length","hasOwnProperty","apply","concat"],"mappings":";;;;;;AAAA;;;;;;AAMA;;;kBAGeA,MAAM;AACnB,QAAMC,QAAQ,EAAd;;AAEA,SAAO,kBAAkB;AACvB,UAAMC,OAAO,GAAGC,KAAH,CAASC,IAAT,CAAcC,SAAd,CAAb;AACA,UAAMC,OAAOJ,KAAKK,GAAL,EAAb;;AAEA,QAAIC,MAAMP,KAAV;AACA,SAAK,IAAIQ,IAAI,CAAR,EAAWC,IAAIR,KAAK,CAAL,CAApB,EAA6BO,IAAIP,KAAKS,MAAtC,EAA8CF,KAAK,CAAL,EAAQC,IAAIR,KAAKO,CAAL,CAA1D,EAAmE;AACjED,YAAMA,IAAIE,CAAJ,IAASF,IAAIE,CAAJ,KAAU,EAAzB;AACD;;AAED,QAAI,CAACF,IAAII,cAAJ,CAAmBN,IAAnB,CAAL,EAA+B;AAC7B,aAAOE,IAAIF,IAAJ,IAAY,MAAMN,GAAGa,KAAH,CAAS,IAAT,EAAeX,KAAKY,MAAL,CAAY,CAACR,IAAD,CAAZ,CAAf,CAAzB;AACD;;AAED,WAAOE,IAAIF,IAAJ,CAAP;AACD,GAdD;AAeD,C","file":"fn.js","sourcesContent":["/**\n * @file src/utils/fn.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\n/**\n * Makes async functions deterministic.\n */\nexport default fn => {\n  const cache = {}\n\n  return async function () {\n    const args = [].slice.call(arguments)\n    const last = args.pop()\n\n    let val = cache\n    for (let i = 0, a = args[0]; i < args.length; i += 1, a = args[i]) {\n      val = val[a] = val[a] || {}\n    }\n\n    if (!val.hasOwnProperty(last)) {\n      return val[last] = await fn.apply(this, args.concat([last]))\n    }\n\n    return val[last]\n  }\n}\n"]}