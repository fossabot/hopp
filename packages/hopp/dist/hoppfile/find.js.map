{"version":3,"sources":["../../src/hoppfile/find.js"],"names":["debug","require","directory","files","filter","f","length","Error","find","dirname"],"mappings":";;;;;;;;AAMA;;;;AACA;;;;AAPA;;;;;;AASA,MAAM,EAAEA,KAAF,KAAYC,QAAQ,cAAR,EAAwB,MAAxB,CAAlB;;AAEA;;;;;;;;sCAMe,WAAqBC,SAArB,EAAgC;AAC7C,UAAMC,QAAQ,CAAC,6BAAM,iBAAQD,SAAR,CAAN,CAAD,EAA2BE,MAA3B,CAAkCC,KAAKA,MAAM,aAA7C,CAAd;;AAEAL,UAAM,0BAAN,EAAkCG,MAAMG,MAAxC,EAAgDJ,SAAhD;;AAEA,QAAIC,MAAMG,MAAN,KAAiB,CAAjB,IAAsBJ,cAAc,GAAxC,EAA6C;AAC3C,YAAM,IAAIK,KAAJ,CAAU,4BAAV,CAAN;AACD;;AAED,WAAOJ,MAAMG,MAAN,KAAiB,CAAjB,GAAqBJ,SAArB,GAAiCM,KAAK,eAAKC,OAAL,CAAaP,SAAb,CAAL,CAAxC;AACD,G;;WAV6BM,I;;;;SAAAA,I","file":"../../src/hoppfile/find.js","sourcesContent":["/**\n * @file src/utils/load.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\nimport path from 'path'\nimport { readdir } from '../fs'\n\nconst { debug } = require('../utils/log')('hopp')\n\n/**\n * Looks for hoppfile.js in {directory} and its parents.\n * @param {String} directory\n * @returns {String} the directory in which the file exists\n * @throws {Error} if file was not found\n */\nexport default async function find (directory) {\n  const files = (await readdir(directory)).filter(f => f === 'hoppfile.js')\n\n  debug('found %s hoppfiles in %s', files.length, directory)\n\n  if (files.length === 0 && directory === '/') {\n    throw new Error('Failed to find hoppfile.js')\n  }\n\n  return files.length === 1 ? directory : find(path.dirname(directory))\n}\n"]}