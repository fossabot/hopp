{"version":3,"sources":["../../src/tasks/loadPlugins.js"],"names":["cache","directory","pkgFile","pkg","require","pkgStat","mtime","savedStat","list","val","concat","Object","keys","dependencies","devDependencies","peerDependencies","filter","dep","start","substr"],"mappings":";;;;;;;;AAMA;;AACA;;IAAYA,K;;;;AAEZ;;;;;AATA;;;;;;;sCAce,WAAMC,SAAN,EAAmB;AAChC,UAAMC,UAAUD,YAAY,eAA5B;AACA,UAAME,MAAMC,QAAQF,OAAR,CAAZ;AACA,UAAMG,UAAU,CAAC,CAAC,6BAAM,cAAKH,OAAL,CAAN,CAAD,EAAsBI,KAAvC;;AAEA,QAAI,CAACC,SAAD,EAAYC,IAAZ,IAAoBR,MAAMS,GAAN,CAAU,IAAV,KAAmB,EAA3C;;AAEA;;;AAGA,QAAIF,cAAcF,OAAlB,EAA2B;AACzB,aAAOG,IAAP;AACD;;AAED;;;AAGAA,WAAO,GAAGE,MAAH,CACLC,OAAOC,IAAP,CAAYT,IAAIU,YAAJ,IAAoB,EAAhC,CADK,EAELF,OAAOC,IAAP,CAAYT,IAAIW,eAAJ,IAAuB,EAAnC,CAFK,EAGLH,OAAOC,IAAP,CAAYT,IAAIY,gBAAJ,IAAwB,EAApC,CAHK,EAILC,MAJK,CAIEC,OAAO;AACd,YAAMC,QAAQD,IAAIE,MAAJ,CAAW,CAAX,EAAc,EAAd,CAAd;AACA,aAAOD,UAAU,cAAV,IAA4BA,UAAU,cAA7C;AACD,KAPM,CAAP;;AASA;;;AAGAlB,UAAMS,GAAN,CAAU,IAAV,EAAgB,CACdJ,OADc,EAEdG,IAFc,CAAhB;;AAKA;;;AAGA,WAAOA,IAAP;AACD,G","file":"../../src/tasks/loadPlugins.js","sourcesContent":["/**\n * @file src/plugins/load.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\nimport { stat } from '../fs'\nimport * as cache from '../cache'\n\n/**\n * Loads the list of plugins defined in the package.json.\n * @param {String} path to directory with package.json\n * @return {Promise} resolves with array of paths to plugins\n */\nexport default async directory => {\n  const pkgFile = directory + '/package.json'\n  const pkg = require(pkgFile)\n  const pkgStat = +(await stat(pkgFile)).mtime\n\n  let [savedStat, list] = cache.val('pl') || []\n\n  /**\n   * Return cached result if unmodified.\n   */\n  if (savedStat === pkgStat) {\n    return list\n  }\n\n  /**\n   * Filter for appropriate dependencies.\n   */\n  list = [].concat(\n    Object.keys(pkg.dependencies || {}),\n    Object.keys(pkg.devDependencies || {}),\n    Object.keys(pkg.peerDependencies || {})\n  ).filter(dep => {\n    const start = dep.substr(0, 12)\n    return start === 'hopp-plugin-' || start === 'hopp-preset-'\n  })\n\n  /**\n   * Store in cache.\n   */\n  cache.val('pl', [\n    pkgStat,\n    list\n  ])\n\n  /**\n   * Return saved list.\n   */\n  return list\n}\n"]}