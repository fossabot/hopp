{"version":3,"sources":["../../src/hoppfile/find.js"],"names":["require","debug","directory","f","files","filter","length","Error","find","dirname"],"mappings":";;;;;;AAMA;;;;AACA;;;;2cAPA;;;;;;eASkBA,QAAQ,cAAR,EAAwB,MAAxB,C;IAAVC,K,YAAAA,K;;AAER;;;;;;;;;uDAMe,iBAAqBC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ,iBAAQA,SAAR,CADR;;AAAA;AAAA,0BACmC;AAAA,qBAAKC,MAAM,aAAX;AAAA,aADnC;;AACPC,iBADO,iBAC4BC,MAD5B;;;AAGbJ,kBAAM,0BAAN,EAAkCG,MAAME,MAAxC,EAAgDJ,SAAhD;;AAHa,kBAKTE,MAAME,MAAN,KAAiB,CAAjB,IAAsBJ,cAAc,GAL3B;AAAA;AAAA;AAAA;;AAAA,kBAML,IAAIK,KAAJ,CAAU,4BAAV,CANK;;AAAA;AAAA,kBASNH,MAAME,MAAN,KAAiB,CATX;AAAA;AAAA;AAAA;;AAAA,0BASeJ,SATf;AAAA;AAAA;;AAAA;AAAA;AAAA,mBASiCM,KAAK,eAAKC,OAAL,CAAaP,SAAb,CAAL,CATjC;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeM,I;;;;SAAAA,I","file":"find.js","sourcesContent":["/**\n * @file src/utils/load.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\nimport path from 'path'\nimport { readdir } from '../fs'\n\nconst { debug } = require('../utils/log')('hopp')\n\n/**\n * Looks for hoppfile.js in {directory} and its parents.\n * @param {String} directory\n * @returns {String} the directory in which the file exists\n * @throws {Error} if file was not found\n */\nexport default async function find( directory ) {\n  const files = (await readdir(directory)).filter(f => f === 'hoppfile.js')\n\n  debug('found %s hoppfiles in %s', files.length, directory)\n\n  if (files.length === 0 && directory === '/') {\n    throw new Error('Failed to find hoppfile.js')\n  }\n\n  return files.length === 1 ? directory : await find(path.dirname(directory))\n}\n"]}