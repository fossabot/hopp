{"version":3,"sources":["../../src/tasks/parallel.js"],"names":["taskTree","bustedTasks","parallel","start","name","directory","Promise","all","tasks","map","task","toJSON","defineTasks","defns","busted"],"mappings":";;;;;AAAA;;;;;;AAMA,IAAIA,iBAAJ;AACA,IAAIC,oBAAJ;;AAEA;;;;AAIA,IAAMC,WAAW,SAAXA,QAAW;AAAA,SAAU;AACzB;;;;;AAKAC,SANyB,iBAMlBC,IANkB,EAMZC,SANY,EAMD;AACtB;AACA,aAAOC,QAAQC,GAAR,CAAYC,MAAMC,GAAN,CACjB;AAAA,eAAQT,SAASU,IAAT,EAAeP,KAAf,CAAwBC,IAAxB,SAAgCM,IAAhC,EAAwCL,SAAxC,EAAmD,CAAC,CAACJ,YAAYS,IAAZ,CAArD,CAAR;AAAA,OADiB,CAAZ,CAAP;AAGD,KAXwB;;;AAazB;;;;;;;AAOAC,UApByB,oBAoBf;AACR,aAAO,CAAC,UAAD,EAAaH,KAAb,CAAP;AACD;AAtBwB,GAAV;AAAA,CAAjB;;AAyBAN,SAASU,WAAT,GAAuB,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACxCd,aAAWa,KAAX;AACAZ,gBAAca,MAAd;AACD,CAHD;;kBAKeZ,Q","file":"parallel.js","sourcesContent":["/**\n * @file src/plugins/parallel.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\nlet taskTree\nlet bustedTasks\n\n/**\n * Creates a Hopp-ish object that runs\n * subtasks in parallel.\n */\nconst parallel = tasks => ({\n  /**\n   * Starts all tasks concurrently.\n   * \n   * @return {Promise} joins all task promises under .all()\n   */\n  start (name, directory) {\n    // just async for now\n    return Promise.all(tasks.map(\n      task => taskTree[task].start(`${name}:${task}`, directory, !!bustedTasks[task])\n    ))\n  },\n\n  /**\n   * Converts tasks to JSON.\n   * Just converts them into an array of\n   * JSON objects.\n   * \n   * @return {Array} \n   */\n  toJSON () {\n    return ['parallel', tasks]\n  }\n})\n\nparallel.defineTasks = (defns, busted) => {\n  taskTree = defns\n  bustedTasks = busted\n}\n\nexport default parallel\n"]}