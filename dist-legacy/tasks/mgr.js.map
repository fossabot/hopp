{"version":3,"sources":["../../src/tasks/mgr.js"],"names":["cache","debug","watchlog","log","plugins","pluginConfig","isUndefined","value","undefined","Hopp","src","Array","pluginCtx","d","stack","out","dest","name","directory","recache","watchers","forEach","newpath","split","sub","indexOf","sep","resolve","substr","push","watch","recursive","start","Promise","process","on","watcher","close","modified","useDoubleCache","sourcemap","files","freshBuild","unmodified","file","originalFd","tmpBundle","tmpBundlePath","bundle","Date","now","stream","createReadStream","fd","autoClose","replace","end","basename","concat","buildStack","add","dirname","reject","pipe","createWriteStream","map","error","that","mode","plugin","pluginStream","data","handler","then","emit","newData","catch","err","retval","next","done","Error","taskName","args","mod","require","join","config","__esModule","default","logger","pluginCache","needsBundling","needsRecaching","readonly","length","loadedPlugins","hasOwnProperty","loadPlugin","startBundling","body","output","tmp","tmppath","promise","newStream","all","val","json"],"mappings":"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","file":"mgr.js","sourcesContent":["/**\n * @file src/tasks/mgr.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\nimport fs from 'fs'\nimport path from 'path'\nimport pump from 'pump'\nimport glob from '../fs/glob'\nimport through from 'through'\nimport * as cache from '../cache'\nimport mapStream from 'map-stream'\nimport getPath from '../fs/get-path'\nimport { _, createLogger } from '../utils'\nimport { disableFSCache, mkdirp, openFile, tmpFile, tmpFileSync } from '../fs'\nimport { buffer, Bundle, createReadStream } from '../streams'\n\nconst { debug } = createLogger('hopp')\nconst watchlog = createLogger('hopp:watch').log\n\n/**\n * Plugins storage.\n */\nconst plugins = {}\nconst pluginConfig = {}\n\n/**\n * Test for undefined or null.\n */\nfunction isUndefined (value) {\n  return value === undefined || value === null\n}\n\n/**\n * Hopp class to manage tasks.\n */\nexport default class Hopp {\n  /**\n   * Creates a new task with the glob.\n   * DOES NOT START THE TASK.\n   *\n   * @param {Glob} src\n   * @return {Hopp} new hopp object\n   */\n  constructor (src) {\n    if (!(src instanceof Array)) {\n      src = [src]\n    }\n\n    // store context local to each task\n    this.pluginCtx = {}\n\n    // persistent info\n    this.d = {\n      src,\n      stack: []\n    }\n  }\n\n  /**\n   * Sets the destination of this pipeline.\n   * @param {String} out\n   * @return {Hopp} task manager\n   */\n  dest (out) {\n    this.d.dest = out\n    return this\n  }\n\n  /**\n   * Run task in continuous mode.\n   */\n  watch (name, directory, recache = false) {\n    name = `watch:${name}`\n\n    const watchers = []\n\n    this.d.src.forEach(src => {\n      // get most definitive path possible\n      let newpath = ''\n      for (let sub of src.split('/')) {\n        if (sub) {\n          if (sub.indexOf('*') !== -1) {\n            break\n          }\n\n          newpath += path.sep + sub\n        }\n      }\n      newpath = path.resolve(directory, newpath.substr(1))\n\n      // disable fs caching for watch\n      disableFSCache()\n\n      // start watch\n      watchlog('Watching for %s ...', name)\n      watchers.push(fs.watch(newpath, {\n        recursive: src.indexOf('/**/') !== -1\n      }, () => this.start(name, directory, recache, false)))\n    })\n\n    return new Promise(resolve => {\n      process.on('SIGINT', () => {\n        watchers.forEach(watcher => watcher.close())\n        resolve()\n      })\n    })\n  }\n\n  /**\n   * Handles bundling.\n   */\n  async startBundling (name, directory, modified, dest, useDoubleCache = true) {\n    const { log, debug } = createLogger(`hopp:${name}`)\n    debug('Switched to bundling mode')\n\n    /**\n     * Fetch sourcemap from cache.\n     */\n    const sourcemap = cache.sourcemap(name)\n\n    /**\n     * Get full list of current files.\n     */\n    const files = await glob(this.d.src, directory, useDoubleCache, true)\n\n    /**\n     * Create list of unmodified.\n     */\n    let freshBuild = true\n    const unmodified = {}\n\n    for (let file of files) {\n      if (modified.indexOf(file) === -1) {\n        unmodified[file] = true\n        freshBuild = false\n      }\n    }\n\n    /**\n     * Get old bundle & create new one.\n     */\n    const originalFd = freshBuild ? null : await openFile(dest, 'r')\n    const [tmpBundle, tmpBundlePath] = await tmpFile()\n\n    /**\n     * Create new bundle to forward to.\n     */\n    const bundle = new Bundle(directory, tmpBundle)\n\n    /**\n     * Since bundling starts streaming right away, we can count this\n     * as the start of the build.\n     */\n    const start = Date.now()\n    log('Starting task')\n\n    /**\n     * Add all files.\n     */\n    for (let file of files) {\n      let stream\n\n      if (unmodified[file]) {\n        debug('forward: %s', file)\n        stream = fs.createReadStream(null, {\n          fd: originalFd,\n          autoClose: false,\n          start: sourcemap[file.replace(directory, '.')].start,\n          end: sourcemap[file.replace(directory, '.')].end\n        })\n      } else {\n        debug('transform: %s', file)\n        stream = pump([\n          createReadStream(file, dest + '/' + path.basename(file))\n        ].concat(this.buildStack(name)))\n      }\n\n      bundle.add(file, stream)\n    }\n\n    /**\n     * Wait for bundling to end.\n     */\n    await bundle.end(tmpBundlePath)\n\n    /**\n     * Move the bundle to the new location.\n     */\n    if (originalFd) originalFd.close()\n    await mkdirp(path.dirname(dest).replace(directory, ''), directory)\n    await new Promise((resolve, reject) => {\n      const stream = fs.createReadStream(tmpBundlePath).pipe(fs.createWriteStream(dest))\n\n      stream.on('close', resolve)\n      stream.on('error', reject)\n    })\n\n    /**\n     * Update sourcemap.\n     */\n    cache.sourcemap(name, bundle.map)\n\n    log('Task ended (took %s ms)', Date.now() - start)\n  }\n\n  /**\n   * Converts all plugins in the stack into streams.\n   */\n  buildStack (name) {\n    const { error } = createLogger(`hopp:${name}`)\n    const that = this\n\n    let mode = 'stream'\n\n    return this.d.stack.map(([plugin]) => {\n      const pluginStream = through(async function (data) {\n        try {\n          const handler = plugins[plugin](\n            that.pluginCtx[plugin],\n            data\n          )\n\n          // for async functions/promises\n          if (handler instanceof Promise) {\n            handler\n              .then(newData => this.emit('data', newData))\n              .catch(err => this.emit('error', err))\n          } else if ('next' in handler) {\n            let retval\n\n            // for async generators\n            do {\n              retval = await handler.next()\n              this.emit('data', retval.value)\n            } while (!retval.done)\n          } else {\n            // otherwise, fail\n            this.emit('error', new Error('Unknown return value received from ' + plugin))\n          }\n        } catch (err) {\n          this.emit('error', err)\n        }\n      })\n\n      /**\n       * Enable buffer mode if required.\n       */\n      if (mode === 'stream' && pluginConfig[plugin].mode === 'buffer') {\n        mode = 'buffer'\n        return pump(buffer(), pluginStream, err => {\n          if (err) error(err && err.stack ? err.stack : err)\n        })\n      }\n\n      /**\n       * Otherwise keep pumping.\n       */\n      return pluginStream\n    })\n  }\n\n  /**\n   * Loads a plugin, manages its env.\n   */\n  loadPlugin (taskName, plugin, args, directory) {\n    let mod = plugins[plugin]\n\n    if (!mod) {\n      // convert plugin path from relative back to absolute\n      try {\n        mod = require(path.join(directory, 'node_modules', plugin))\n      } catch (err) {\n        debug('failed to load plugin: %s', err && err.stack ? err.stack : err)\n        throw new Error('Failed to load plugin: ' + plugin)\n      }\n\n      // expose module config\n      pluginConfig[plugin] = mod.config || {}\n\n      // if defined as an ES2015 module, assume that the\n      // export is at 'default'\n      if (mod.__esModule === true) {\n        mod = mod.default\n      }\n\n      // add plugins to loaded plugins\n      plugins[plugin] = mod\n    }\n\n    // create plugin logger\n    const logger = createLogger(`hopp:${taskName}:${path.basename(plugin).substr(5)}`)\n\n    // load/create cache for plugin\n    const pluginCache = cache.plugin(plugin)\n\n    // create a new context for this plugin\n    this.pluginCtx[plugin] = {\n      args,\n      cache: pluginCache,\n      log: logger.log,\n      debug: logger.debug,\n      error: logger.error\n    }\n  }\n\n  /**\n   * Starts the pipeline.\n   * @return {Promise} resolves when task is complete\n   */\n  async start (name, directory, recache = false, useDoubleCache = true) {\n    const { log, debug } = createLogger(`hopp:${name}`)\n\n    /**\n     * Figure out if bundling is needed & load plugins.\n     */\n    if (isUndefined(this.needsBundling) || isUndefined(this.needsRecaching) || isUndefined(this.readonly) || (this.d.stack.length > 0 && !this.loadedPlugins)) {\n      this.loadedPlugins = true\n\n      this.d.stack.forEach(([plugin, args]) => {\n        if (!this.pluginCtx.hasOwnProperty(plugin)) {\n          this.loadPlugin(name, plugin, args, directory)\n        }\n\n        this.needsBundling = !!(this.needsBundling || pluginConfig[plugin].bundle)\n        this.needsRecaching = !!(this.needsRecaching || pluginConfig[plugin].recache)\n        this.readonly = !!(this.readonly || pluginConfig[plugin].readonly)\n\n        if (this.needsBundling && this.readonly) {\n          throw new Error('Task chain enabled bundling and readonly mode at the same time. Not sure what to do.')\n        }\n      })\n    }\n\n    /**\n     * Override recaching.\n     */\n    if (this.needsRecaching) {\n      recache = true\n    }\n\n    /**\n     * Get the modified files.\n     */\n    debug('task recache = %s', recache)\n    let files = await glob(this.d.src, directory, useDoubleCache, recache)\n\n    if (files.length > 0) {\n      const dest = this.d.dest ? path.resolve(directory, getPath(this.d.dest)) : ''\n\n      /**\n       * Switch to bundling mode if need be.\n       */\n      if (this.needsBundling) {\n        return this.startBundling(name, directory, files, dest, useDoubleCache)\n      }\n\n      /**\n       * Ensure dist directory exists.\n       */\n      if (!this.readonly || !this.d.dest) {\n        await mkdirp(dest.replace(directory, ''), directory)\n      }\n\n      /**\n       * Create streams.\n       */\n      files = _(files).map(file => ({\n        file,\n        stream: [\n          createReadStream(file, dest + '/' + path.basename(file))\n        ]\n      }))\n\n      if (this.d.stack.length > 0) {\n        /**\n         * Create streams.\n         */\n        const stack = this.buildStack(name)\n\n        /**\n         * Connect plugin streams with pipelines.\n         */\n        files.map(file => {\n          file.stream = file.stream.concat(stack)\n          return file\n        })\n      }\n\n      /**\n       * Connect with destination.\n       */\n      files.map(file => {\n        if (!this.readonly) {\n          // strip out the actual body and write it\n          file.stream.push(mapStream((data, next) => {\n            if (typeof data !== 'object' || !data.hasOwnProperty('body')) {\n              return next(new Error('A plugin has destroyed the stream by returning a non-object.'))\n            }\n\n            next(null, data.body)\n          }))\n\n          // add the writestream at the end\n          let output\n\n          if (!this.d.dest) {\n            const { fd: tmp, name: tmppath } = tmpFileSync()\n            output = fs.createWriteStream(null, {\n              fd: tmp\n            })\n\n            file.promise = new Promise((resolve, reject) => {\n              output.on('close', () => {\n                const newStream =\n                  fs.createReadStream(tmppath)\n                    .pipe(fs.createWriteStream(file.file))\n\n                newStream.on('error', reject)\n                newStream.on('close', resolve)\n              })\n            })\n          } else {\n            output = fs.createWriteStream(dest + '/' + path.basename(file.file))\n          }\n\n          file.stream.push(output)\n        }\n\n        // promisify the current pipeline\n        return new Promise((resolve, reject) => {\n          // connect all streams together to form pipeline\n          file.stream = pump(file.stream, err => {\n            if (err) reject(err)\n          })\n\n          if (file.promise) {\n            file.promise.then(resolve, reject)\n          } else {\n            file.stream.on('close', resolve)\n          }\n        })\n      })\n\n      // start & wait for all pipelines to end\n      const start = Date.now()\n      log('Starting task')\n      await Promise.all(files.val())\n      log('Task ended (took %s ms)', Date.now() - start)\n    } else {\n      log('Skipping task')\n    }\n  }\n\n  /**\n   * Converts task manager to JSON for storage.\n   * @return {Object} proper JSON object\n   */\n  toJSON () {\n    return {\n      dest: this.d.dest,\n      src: this.d.src,\n      stack: this.d.stack,\n      needsBundling: this.needsBundling,\n      needsRecaching: this.needsRecaching,\n      readonly: this.readonly\n    }\n  }\n\n  /**\n   * Deserializes a JSON object into a manager.\n   * @param {Object} json\n   * @return {Hopp} task manager\n   */\n  fromJSON (json) {\n    this.d.dest = json.dest\n    this.d.src = json.src\n    this.d.stack = json.stack\n    this.needsBundling = json.needsBundling\n    this.needsRecaching = json.needsRecaching\n    this.readonly = json.readonly\n\n    return this\n  }\n}\n"]}